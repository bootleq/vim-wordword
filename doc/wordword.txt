*wordword.txt*                                      Put space on word boundary

Version:    0.0.1
Author:     bootleq <bootleq@gmail.com>
License:    Public Domain

==============================================================================
CONTENTS                                                  *wordword-contents*

    Introduction  .......................... |wordword-introduction|
    Configuration  ......................... |wordword-configuration|
      General options  ..................... |wordword-general-options|
      Operator  ............................ |wordword-operator|
      Auto Commands  ....................... |wordword-autocmds|

==============================================================================
INTRODUCTION                                           *wordword-introduction*

Reading words without dividing is uncomfortable. >

  word文字word

Add word-boundry spaces to rescue. >

  word 文字 word

==============================================================================
CONFIGURATION                                         *wordword-configuration*

------------------------------------------------------------------------------
General options                                     *wordword-general-options*

                                                           *g:loaded_wordword*
g:loaded_wordword       (default: none) ~

  Set to 1 to prevent this plugin from being loaded.

                                             *g:wordword_break_on_punctuation*
g:wordword_break_on_punctuation ~
                        (default: none) ~

  Set to 1 to put extra spaces between words and punctuations.
  This ensures one space is added after below characters: >

    ! , . : ; ?
<
  and surrounding spaces of parenthesis `()` will be added. For example: >

    foo,bar(baz)qux
<
  will be converted to >

    foo, bar (baz) qux
<
------------------------------------------------------------------------------
Operator                                                   *wordword-operator*
                                                   *<Plug>(operator-wordword)*

If |vim-operator-user| is installed, a new |operator| become available.

No default mapping is set, map it yourself: >

  map gs <Plug>(operator-wordword)
<
then do `gsap` in normal mode will "do adding space on a paragraph".

Ref: kana/vim-textobj-user
https://github.com/kana/vim-textobj-user

------------------------------------------------------------------------------
Auto Commands                                              *wordword-autocmds*

There are 'autocommand' settings for auto space-inserting when typing. 

Functionality is rather basic, prefix spaces were well added, while suffix
spaces were only added when leaving insert mode, hence may not accurate.

By default no autocmd were set. Use below functions to set yourself.

                                                    *wordword#auto#register()*
                                                  *wordword#auto#unregister()*
Set or remove autocmds for current buffer (our autocmds are always
buffer-local).

Accepts 'insert_char_pre' or 'insert_leave' as argument to only register
single event.

                                                          *wordword#auto#on()*
Resume auto-inserting from previous pause.

                                                         *wordword#auto#off()*
Pause auto-inserting. (this doesn't remove autocmd settings)

                                                      *wordword#auto#paused()*
Get current pause status.

Configuration example: >
  call wordword#auto#register()  " always set autocmds, not recommand

  augroup my_setting
    autocmd!
    autocmd FileType text call wordword#auto#register()
  augroup END
<
==============================================================================
vim:tw=78:fo=tcroq2mM:et:sts=2:sw=2:ft=help:norl:
